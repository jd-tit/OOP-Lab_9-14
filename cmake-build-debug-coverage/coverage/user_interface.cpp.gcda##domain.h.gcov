        -:    0:Source:/mnt/c/Projects/fac/OOP/Lab8/domain.h
        -:    0:Graph:/mnt/c/Projects/fac/OOP/Lab8/cmake-build-debug-coverage/CMakeFiles/Lab5_Contract_de_studii.dir/user_interface.cpp.gcno
        -:    0:Data:/mnt/c/Projects/fac/OOP/Lab8/cmake-build-debug-coverage/CMakeFiles/Lab5_Contract_de_studii.dir/user_interface.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by jdt on 3/26/2022.
        -:    3://
        -:    4:
        -:    5:#ifndef LAB5_CONTRACT_DE_STUDII_DOMAIN_H
        -:    6:#define LAB5_CONTRACT_DE_STUDII_DOMAIN_H
        -:    7:
        -:    8:#include <string>
        -:    9:#include <utility>
        -:   10:#include <iostream>
        -:   11:
        -:   12:class Course{
        -:   13:private:
        -:   14:    std::string name, type, teacher;
        -:   15:    unsigned int hours_per_week;
        -:   16:    size_t id;
        -:   17:public:
        -:   18:  Course(const std::string& name, const std::string& type,
        -:   19:         const std::string& teacher,
        -:   20:         unsigned int hours_per_week, size_t id) :
        -:   21:        name(name),
        -:   22:        type(type),
        -:   23:        teacher(teacher),
        -:   24:        hours_per_week(hours_per_week),
        -:   25:        id(id){}
        -:   26:
        -:   27:  Course(const Course& org) = default;
        -:   28:
        -:   29:  Course(Course&&) = default;
        -:   30:
        -:   31:  Course& operator=(const Course& c){
        -:   32:    if(this->to_str() == c.to_str()){
        -:   33:      return *this;
        -:   34:    } else {
        -:   35:      this->hours_per_week = c.hours_per_week;
        -:   36:      this->teacher = c.teacher;
        -:   37:      this->name = c.name;
        -:   38:      this->type = c.type;
        -:   39:      this->id = c.id;
        -:   40:      return *this;
        -:   41:    }
        -:   42:
        -:   43:  }
        -:   44:
        -:   45://    Course(const Course& org) : name(org.name), type(org.type), teacher(org.teacher), hours_per_week(org.hours_per_week),
        -:   46://                              id(org.id){
        -:   47://      std::cout << "copy" << std::endl;
        -:   48://  }
        -:   49:
        -:   50:  [[nodiscard]] size_t get_id() const;
        -:   51:
        -:   52:  [[nodiscard]] const std::string& get_name() const {
        -:   53:    return name;
        -:   54:  }
        -:   55:
        -:   56:  [[nodiscard]] unsigned getHPW() const{
        -:   57:    return hours_per_week;
        -:   58:  }
        -:   59:
        -:   60:  [[nodiscard]] const std::string& get_teacher() const{
        -:   61:    return teacher;
        -:   62:  }
        -:   63:
        -:   64:  [[nodiscard]] const std::string& get_type() const{
        -:   65:    return type;
        -:   66:  }
        -:   67:
        -:   68:  void set_name(std::string new_name){
        -:   69:    this->name = std::move(new_name);
        -:   70:  }
        -:   71:
        -:   72:  void set_type(std::string new_type){
        -:   73:    this->type = std::move(new_type);
        -:   74:  }
        -:   75:
        -:   76:  void set_teacher(std::string new_teacher){
        -:   77:    this->teacher = std::move(new_teacher);
        -:   78:  }
        -:   79:
        -:   80:  void set_hpw(unsigned int new_hours_per_week){
        -:   81:    this->hours_per_week = new_hours_per_week;
        -:   82:  }
        -:   83:
        -:   84:  Course(): hours_per_week(0), id(0){}
function _ZN6CourseD2Ev called 0 returned 0% blocks executed 0%
    #####:   85:  ~Course() = default;
    %%%%%:   85-block  0
call    0 never executed
call    1 never executed
call    2 never executed
        -:   86:
        -:   87:  /**
        -:   88:   * Convert the Course to a string format.
        -:   89:   * @return The stringified course.
        -:   90:   */
        -:   91:  [[nodiscard]] std::string to_str() const;
        -:   92:
        -:   93:  /**
        -:   94:   * Convert the Course to CSV format.
        -:   95:   * @return The Course, in Comma Separated Values format.
        -:   96:   */
        -:   97:  [[nodiscard]] std::string to_csv() const;
        -:   98:
        -:   99:};
        -:  100:
        -:  101:#endif //LAB5_CONTRACT_DE_STUDII_DOMAIN_H
