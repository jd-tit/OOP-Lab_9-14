        -:    0:Source:/mnt/c/Projects/fac/OOP/Lab8/repo.h
        -:    0:Graph:/mnt/c/Projects/fac/OOP/Lab8/cmake-build-debug-coverage/CMakeFiles/Lab5_Contract_de_studii.dir/test.cpp.gcno
        -:    0:Data:/mnt/c/Projects/fac/OOP/Lab8/cmake-build-debug-coverage/CMakeFiles/Lab5_Contract_de_studii.dir/test.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by jdt on 2022-03-31.
        -:    3://
        -:    4:
        -:    5:#ifndef LAB5_CONTRACT_DE_STUDII_REPO_H
        -:    6:#define LAB5_CONTRACT_DE_STUDII_REPO_H
        -:    7:
        -:    8:#include <vector>
        -:    9:#include "domain.h"
        -:   10:
        -:   11:template<typename T>
        -:   12:class Repo{
        -:   13:protected:
        -:   14:    std::vector<T> contents;
        -:   15:public:
        -:   16:  size_t next_free_id;
        -:   17:
        -:   18:  Repo();
        -:   19:
        -:   20:  /**
        -:   21:   * Get the element at a given index
        -:   22:   * @param index
        -:   23:   * @return
        -:   24:   */
function _ZNK4RepoI6CourseE2atEm called 6 returned 100% blocks executed 100%
        6:   25:  const T& at(size_t index) const{
        6:   26:    return contents.at(index);
        6:   26-block  0
call    0 returned 6
        -:   27:  }
        -:   28:
        -:   29:  /**
        -:   30:   * Get the current size of the internal vector
        -:   31:   * @return
        -:   32:   */
function _ZNK4RepoI6CourseE8get_sizeEv called 0 returned 0% blocks executed 0%
    #####:   33:  [[nodiscard]] size_t get_size() const{
    #####:   34:    return contents.size();
    %%%%%:   34-block  0
call    0 never executed
        -:   35:  }
        -:   36:
        -:   37:  /**
        -:   38:   * Add an element to the Repository
        -:   39:   * @param element
        -:   40:   */
function _ZN4RepoI6CourseE3addERKS0_ called 0 returned 0% blocks executed 0%
    #####:   41:  void add(const T& element){
    #####:   42:    this->contents.push_back(element);
    %%%%%:   42-block  0
call    0 never executed
    #####:   43:    next_free_id++;
    #####:   44:  }
        -:   45:
        -:   46:  /**
        -:   47:   * Get an iterator to the beginning of the Repository
        -:   48:   * @return
        -:   49:   */
function _ZN4RepoI6CourseE5beginEv called 0 returned 0% blocks executed 0%
    #####:   50:  typename std::vector<T>::iterator begin(){
    #####:   51:    return contents.begin();
    %%%%%:   51-block  0
call    0 never executed
        -:   52:  }
        -:   53:
        -:   54:    /**
        -:   55:     * Get a const iterator to the beginning of the Repository
        -:   56:     * @return
        -:   57:     */
        -:   58:    typename std::vector<T>::const_iterator begin() const{
        -:   59:      return cbegin();
        -:   60:    }
        -:   61:
        -:   62:    /**
        -:   63:     * Get a const iterator to the beginning of the Repository
        -:   64:     * @return
        -:   65:     */
function _ZNK4RepoI6CourseE6cbeginEv called 0 returned 0% blocks executed 0%
    #####:   66:    typename std::vector<T>::const_iterator cbegin() const{
    #####:   67:      return contents.cbegin();
    %%%%%:   67-block  0
call    0 never executed
        -:   68:    }
        -:   69:
        -:   70:    /**
        -:   71:     * Get an iterator to one past the end of the Repository
        -:   72:     * @return
        -:   73:     */
function _ZN4RepoI6CourseE3endEv called 0 returned 0% blocks executed 0%
    #####:   74:  typename std::vector<T>::iterator end(){
    #####:   75:    return contents.end();
    %%%%%:   75-block  0
call    0 never executed
        -:   76:  }
        -:   77:
        -:   78:    /**
        -:   79:       * Get an iterator to one past the end of the Repository
        -:   80:       * @return
        -:   81:       */
        -:   82:    typename std::vector<T>::const_iterator end() const{
        -:   83:      return cend();
        -:   84:    }
        -:   85:
        -:   86:    /**
        -:   87:       * Get a const iterator to one past the end of the Repository
        -:   88:       * @return
        -:   89:       */
function _ZNK4RepoI6CourseE4cendEv called 0 returned 0% blocks executed 0%
    #####:   90:    typename std::vector<T>::const_iterator cend() const{
    #####:   91:      return contents.cend();
    %%%%%:   91-block  0
call    0 never executed
        -:   92:    }
        -:   93:
        -:   94:  //Find an element by its ID
function _ZN4RepoI6CourseE10find_by_idEm called 0 returned 0% blocks executed 0%
    #####:   95:  T& find_by_id(size_t id){
    #####:   96:    auto res = std::find_if(begin(), end(),
    %%%%%:   96-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
function _ZZN4RepoI6CourseE10find_by_idEmENKUlRKS0_E_clES3_ called 0 returned 0% blocks executed 0%
    #####:   97:                            [id] (const T& first)
    #####:   98:                            {return first.get_id() == id;});
    %%%%%:   98-block  0
call    0 never executed
    #####:   99:    if(res == end())
    %%%%%:   99-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  100:      throw std::out_of_range("Error: ID not found");
    %%%%%:  100-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  100-block  1
call    4 never executed
    $$$$$:  100-block  2
call    5 never executed
    #####:  101:    return *res;
    %%%%%:  101-block  0
call    0 never executed
    %%%%%:  101-block  1
        -:  102:  }
        -:  103:
        -:  104:  /**
        -:  105:   * Remove the element with a given ID
        -:  106:   * @param id
        -:  107:   */
function _ZN4RepoI6CourseE12remove_by_idEm called 0 returned 0% blocks executed 0%
    #####:  108:  void remove_by_id(size_t id){
    #####:  109:    auto res = std::find_if(begin(), end(),
    %%%%%:  109-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
function _ZZN4RepoI6CourseE12remove_by_idEmENKUlRKS0_E_clES3_ called 0 returned 0% blocks executed 0%
    #####:  110:                            [id] (const T& first)
    #####:  111:                            {return first.get_id() == id;});
    %%%%%:  111-block  0
call    0 never executed
    #####:  112:    if(res == end())
    %%%%%:  112-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  113:      throw std::out_of_range("Error: ID not found");
    %%%%%:  113-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  113-block  1
call    4 never executed
    $$$$$:  113-block  2
call    5 never executed
    #####:  114:    contents.erase(res);
    %%%%%:  114-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    $$$$$:  114-block  1
    #####:  115:  }
    %%%%%:  115-block  0
        -:  116:
        -:  117:  /**
        -:  118:   * Remove the element at a certain index.
        -:  119:   * @param index
        -:  120:   */
        -:  121:  void remove_at(size_t index){
        -:  122:    auto it = begin() + index;
        -:  123:    contents.erase(it);
        -:  124:  }
        -:  125:
        -:  126:  /**
        -:  127:   * Get the internal vector.
        -:  128:   * @return
        -:  129:   */
function _ZN4RepoI6CourseE9getVectorEv called 0 returned 0% blocks executed 0%
    #####:  130:  std::vector<Course>& getVector(){
    #####:  131:    return contents;
    %%%%%:  131-block  0
        -:  132:  }
        -:  133:};
function _ZN4RepoI6CourseEC2Ev called 7 returned 100% blocks executed 100%
        7:  134:template <typename T> Repo<T>::Repo() : next_free_id(0){}
        7:  134-block  0
call    0 returned 7
        -:  135:
        -:  136:#endif // LAB5_CONTRACT_DE_STUDII_REPO_H
