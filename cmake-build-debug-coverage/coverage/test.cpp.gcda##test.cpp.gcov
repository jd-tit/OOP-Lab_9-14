        -:    0:Source:/mnt/c/Projects/fac/OOP/Lab8/test.cpp
        -:    0:Graph:/mnt/c/Projects/fac/OOP/Lab8/cmake-build-debug-coverage/CMakeFiles/Lab5_Contract_de_studii.dir/test.cpp.gcno
        -:    0:Data:/mnt/c/Projects/fac/OOP/Lab8/cmake-build-debug-coverage/CMakeFiles/Lab5_Contract_de_studii.dir/test.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by jdt on 2022-03-31.
        -:    3://
        -:    4:
        -:    5:#include "test.h"
        -:    6:#include "domain.h"
        -:    7:#include "validate.h"
        -:    8:#include "repo.h"
        -:    9:#include "controller.h"
        -:   10:#include <algorithm>
        -:   11:
        -:   12:#include <cassert>
        -:   13:
function _Z10testDomainv called 1 returned 100% blocks executed 58%
        1:   14:void testDomain(){
        3:   15:  Course c{"Painting", "optional", "Bob Ross", 4, 0};
        1:   15-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   15-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   15-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   15-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
        1:   15-block  4
call   20 returned 1
    $$$$$:   15-block  5
    $$$$$:   15-block  6
    $$$$$:   15-block  7
    $$$$$:   15-block  8
    $$$$$:   15-block  9
    $$$$$:   15-block 10
    $$$$$:   15-block 11
call   21 never executed
        -:   16:
       1*:   17:  assert(c.to_str() == "ID: 0; Name: Painting; Type: optional; Teacher: Bob Ross; Hours per week: 4");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   17-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   17-block  1
call    6 never executed
        1:   17-block  2
call    7 returned 1
       1*:   18:  assert(c.to_csv() == "0,Painting,optional,Bob Ross,4"),
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   18-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   18-block  1
call    6 never executed
    $$$$$:   18-block  2
call    7 never executed
    $$$$$:   18-block  3
        1:   19:  c.set_name("Racketeering");
        1:   19-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   19-block  1
call    4 returned 1
call    5 returned 1
call    6 returned 1
call    7 returned 1
    $$$$$:   19-block  2
call    8 never executed
    $$$$$:   19-block  3
       1*:   20:  assert(c.get_name() == "Racketeering");
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:   20-block  0
call    4 never executed
        -:   21:
        1:   22:  c.set_teacher("Mike");
        1:   22-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   22-block  1
call    4 returned 1
call    5 returned 1
call    6 returned 1
    $$$$$:   22-block  2
call    7 never executed
    $$$$$:   22-block  3
       1*:   23:  assert(c.get_teacher() == "Mike");
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:   23-block  0
call    4 never executed
        -:   24:
        1:   25:  c.set_type("Maybe");
        1:   25-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   25-block  1
call    4 returned 1
call    5 returned 1
call    6 returned 1
    $$$$$:   25-block  2
call    7 never executed
    $$$$$:   25-block  3
       1*:   26:  assert(c.get_type() == "Maybe");
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:   26-block  0
call    4 never executed
        -:   27:
        1:   28:  c.set_hpw(1);
        1:   28-block  0
call    0 returned 1
       1*:   29:  assert(c.getHPW() == 1);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   29-block  0
call    3 never executed
        -:   30:
       1*:   31:  assert(c.get_id() == 0);
        1:   31-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   31-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   31-block  2
call    5 never executed
        1:   32:}
        -:   33:
function _Z12testValidatev called 1 returned 100% blocks executed 54%
        1:   34:void testValidate(){
       1*:   35:  assert(is_valid_string("Cooking"));
        1:   35-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   35-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   35-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   35-block  3
call    9 never executed
        1:   35-block  4
call   10 returned 1
call   11 returned 1
    $$$$$:   35-block  5
call   12 never executed
    $$$$$:   35-block  6
    $$$$$:   35-block  7
call   13 never executed
    $$$$$:   35-block  8
call   14 never executed
       1*:   36:  assert(!is_valid_string(""));
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   36-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   36-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   36-block  2
call    9 never executed
        1:   36-block  3
call   10 returned 1
call   11 returned 1
    $$$$$:   36-block  4
call   12 never executed
    $$$$$:   36-block  5
    $$$$$:   36-block  6
call   13 never executed
    $$$$$:   36-block  7
call   14 never executed
       1*:   37:  assert(!is_valid_string("\""));
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   37-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   37-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   37-block  2
call    9 never executed
        1:   37-block  3
call   10 returned 1
call   11 returned 1
    $$$$$:   37-block  4
call   12 never executed
    $$$$$:   37-block  5
    $$$$$:   37-block  6
call   13 never executed
    $$$$$:   37-block  7
call   14 never executed
       1*:   38:  assert(!is_valid_string("A"));
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   38-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   38-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   38-block  2
call    9 never executed
        1:   38-block  3
call   10 returned 1
call   11 returned 1
    $$$$$:   38-block  4
call   12 never executed
    $$$$$:   38-block  5
    $$$$$:   38-block  6
call   13 never executed
        -:   39:
       42:   40:  for(int i = 1; i < 24 * 7 / 4; ++i) {
       42:   40-block  0
branch  0 taken 41 (fallthrough)
branch  1 taken 1
       41:   40-block  1
      41*:   41:    assert(is_valid_hours_per_week(i));
       41:   41-block  0
call    0 returned 41
branch  1 taken 0 (fallthrough)
branch  2 taken 41
    %%%%%:   41-block  1
call    3 never executed
        -:   42:  }
       1*:   43:  assert(!is_valid_hours_per_week(0));
        1:   43-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   43-block  1
call    3 never executed
       1*:   44:  assert(!is_valid_hours_per_week(100));
        1:   44-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   44-block  1
call    3 never executed
        1:   45:}
        1:   45-block  0
        -:   46:
function _Z8testRepov called 1 returned 100% blocks executed 56%
        1:   47:void testRepo(){
        2:   48:    Repo<Course> repo;
        1:   48-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:   48-block  1
call    2 never executed
        3:   49:    Course c1{"Painting", "optional", "Bob Ross", 4, 0};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   49-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   49-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   49-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
call   20 returned 1
    $$$$$:   49-block  3
    $$$$$:   49-block  4
    $$$$$:   49-block  5
    $$$$$:   49-block  6
    $$$$$:   49-block  7
    $$$$$:   49-block  8
    $$$$$:   49-block  9
call   21 never executed
        3:   50:    Course c2{"Math", "optional", "Terry Tao", 8, 1};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   50-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   50-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   50-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
call   20 returned 1
    $$$$$:   50-block  3
    $$$$$:   50-block  4
    $$$$$:   50-block  5
    $$$$$:   50-block  6
    $$$$$:   50-block  7
    $$$$$:   50-block  8
    $$$$$:   50-block  9
call   21 never executed
        3:   51:    Course c3{"Music", "optional", "Lena Raine", 5, 2};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   51-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   51-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   51-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
        1:   51-block  3
call   20 returned 1
    $$$$$:   51-block  4
    $$$$$:   51-block  5
    $$$$$:   51-block  6
    $$$$$:   51-block  7
    $$$$$:   51-block  8
    $$$$$:   51-block  9
    $$$$$:   51-block 10
call   21 never executed
        -:   52:
        1:   53:    repo.add(c1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   54:    repo.add(c2);
        1:   54-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   55:    repo.add(c3);
        1:   55-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   56:
        5:   57:    Course courses[] = {c1, c2,c3};
        1:   57-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   57-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   57-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        4:   57-block  3
branch  9 taken 3 (fallthrough)
branch 10 taken 1
        3:   57-block  4
call   11 returned 3
    $$$$$:   57-block  5
    $$$$$:   57-block  6
call   12 never executed
    $$$$$:   57-block  7
    $$$$$:   57-block  8
branch 13 never executed
branch 14 never executed
    $$$$$:   57-block  9
call   15 never executed
        -:   58:
       1*:   59:    assert(repo.get_size() == 3);
        1:   59-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   59-block  1
call    3 never executed
        4:   60:    for(size_t i = 0; i < repo.get_size(); ++i){
        1:   60-block  0
        4:   60-block  1
call    0 returned 4
branch  1 taken 3 (fallthrough)
branch  2 taken 1
        3:   61:        const auto& res_c = repo.at(i);
        3:   61-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
       3*:   62:        assert(res_c.to_str() == courses[i].to_str());
        3:   62-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   62-block  1
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   62-block  2
call    6 returned 3
branch  7 taken 0 (fallthrough)
branch  8 taken 3
    %%%%%:   62-block  3
call    9 never executed
        3:   62-block  4
call   10 returned 3
call   11 returned 3
    $$$$$:   62-block  5
call   12 never executed
    $$$$$:   62-block  6
        -:   63:    }
        -:   64:
        1:   65:    int i = 0;
        4:   66:    for(const auto& res_c : repo){
        1:   66-block  0
call    0 returned 1
call    1 returned 1
        4:   66-block  1
call    2 returned 4
branch  3 taken 3 (fallthrough)
branch  4 taken 1
        3:   66-block  2
call    5 returned 3
       3*:   67:        assert(res_c.to_str() == courses[i].to_str());
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   67-block  0
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   67-block  1
call    6 returned 3
branch  7 taken 0 (fallthrough)
branch  8 taken 3
    %%%%%:   67-block  2
call    9 never executed
        3:   67-block  3
call   10 returned 3
call   11 returned 3
    $$$$$:   67-block  4
call   12 never executed
    $$$$$:   67-block  5
        3:   68:        ++i;
call    0 returned 3
        -:   69:    }
        -:   70:
        1:   71:    i = 0;
        4:   72:    for(auto it = repo.begin(); it != repo.end(); ++it){
        1:   72-block  0
call    0 returned 1
        4:   72-block  1
call    1 returned 4
call    2 returned 4
branch  3 taken 3 (fallthrough)
branch  4 taken 1
       3*:   73:        assert(it->to_str() == courses[i].to_str());
        3:   73-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   73-block  1
call    3 returned 3
call    4 returned 3
branch  5 taken 3 (fallthrough)
branch  6 taken 0 (throw)
        3:   73-block  2
call    7 returned 3
branch  8 taken 0 (fallthrough)
branch  9 taken 3
    %%%%%:   73-block  3
call   10 never executed
        3:   73-block  4
call   11 returned 3
call   12 returned 3
    $$$$$:   73-block  5
call   13 never executed
    $$$$$:   73-block  6
        3:   74:        ++i;
call    0 returned 3
        -:   75:    }
        -:   76:
        1:   77:    i = 0;
        4:   78:    for(auto it = repo.cbegin(); it != repo.cend(); ++it){
        1:   78-block  0
call    0 returned 1
        4:   78-block  1
call    1 returned 4
call    2 returned 4
branch  3 taken 3 (fallthrough)
branch  4 taken 1
       3*:   79:        assert(it->to_str() == courses[i].to_str());
        3:   79-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   79-block  1
call    3 returned 3
call    4 returned 3
branch  5 taken 3 (fallthrough)
branch  6 taken 0 (throw)
        3:   79-block  2
call    7 returned 3
branch  8 taken 0 (fallthrough)
branch  9 taken 3
    %%%%%:   79-block  3
call   10 never executed
        3:   79-block  4
call   11 returned 3
call   12 returned 3
    $$$$$:   79-block  5
call   13 never executed
    $$$$$:   79-block  6
        3:   80:        ++i;
call    0 returned 3
        -:   81:    }
        -:   82:
        1:   83:    i = 0;
        4:   84:    for(auto it = repo.begin(); it != repo.end(); ++it){
        1:   84-block  0
call    0 returned 1
        4:   84-block  1
call    1 returned 4
call    2 returned 4
branch  3 taken 3 (fallthrough)
branch  4 taken 1
       3*:   85:        assert(it->to_str() == courses[i].to_str());
        3:   85-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   85-block  1
call    3 returned 3
call    4 returned 3
branch  5 taken 3 (fallthrough)
branch  6 taken 0 (throw)
        3:   85-block  2
call    7 returned 3
branch  8 taken 0 (fallthrough)
branch  9 taken 3
    %%%%%:   85-block  3
call   10 never executed
        3:   85-block  4
call   11 returned 3
call   12 returned 3
    $$$$$:   85-block  5
call   13 never executed
    $$$$$:   85-block  6
        3:   86:        ++i;
call    0 returned 3
        -:   87:    }
        -:   88:
        1:   89:    auto& c = repo.find_by_id(1);
        1:   89-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   90:    assert(c.to_str() == c2.to_str());
        1:   90-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   90-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   90-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   90-block  3
call    9 never executed
        1:   90-block  4
call   10 returned 1
call   11 returned 1
    $$$$$:   90-block  5
call   12 never executed
    $$$$$:   90-block  6
        -:   91:
        1:   92:    repo.remove_by_id(2);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   93:    assert(repo.get_size() == 2);
        1:   93-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   93-block  1
call    3 never executed
        -:   94:
        1:   95:    auto& vect = repo.getVector();
        1:   95-block  0
call    0 returned 1
       1*:   96:    assert(vect.size() == 2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   96-block  0
call    3 never executed
        -:   97:
        -:   98:    try{
        1:   99:        repo.find_by_id(100);
        1:   99-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    #####:  100:        assert(false);
    %%%%%:  100-block  0
call    0 never executed
        -:  101:    }
        1:  102:    catch (std::out_of_range& e){}
        1:  102-block  0
call    0 returned 1
call    1 returned 1
        -:  103:
        -:  104:    try{
        1:  105:        repo.remove_by_id(100);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    =====:  106:        assert(false);
    $$$$$:  106-block  0
call    0 never executed
        -:  107:    }
        1:  108:    catch (std::out_of_range& e){}
        1:  108-block  0
call    0 returned 1
call    1 returned 1
        1:  109:}
        -:  110:
function _Z11testControlv called 1 returned 100% blocks executed 57%
        1:  111:void testControl(){
        2:  112:    ContractController ctrl;
        1:  112-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
    $$$$$:  112-block  1
call    4 never executed
        1:  113:    ctrl.add_course("Painting",  "Bob Ross", "optional", "4");
        1:  113-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  113-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  113-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  113-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  113-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  113-block  5
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
    $$$$$:  113-block  6
call   27 never executed
    $$$$$:  113-block  7
    $$$$$:  113-block  8
call   28 never executed
    $$$$$:  113-block  9
    $$$$$:  113-block 10
call   29 never executed
    $$$$$:  113-block 11
    $$$$$:  113-block 12
call   30 never executed
    $$$$$:  113-block 13
    $$$$$:  113-block 14
call   31 never executed
    $$$$$:  113-block 15
    $$$$$:  113-block 16
call   32 never executed
    $$$$$:  113-block 17
    $$$$$:  113-block 18
call   33 never executed
    $$$$$:  113-block 19
    $$$$$:  113-block 20
call   34 never executed
    $$$$$:  113-block 21
        3:  114:    Course c1{"Painting", "optional", "Bob Ross", 4, 0};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  114-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  114-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  114-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
call   20 returned 1
    $$$$$:  114-block  3
    $$$$$:  114-block  4
    $$$$$:  114-block  5
    $$$$$:  114-block  6
    $$$$$:  114-block  7
    $$$$$:  114-block  8
    $$$$$:  114-block  9
call   21 never executed
        3:  115:    Course c2{"Math", "optional", "Terry Tao", 8, 1};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  115-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  115-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  115-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
call   20 returned 1
    $$$$$:  115-block  3
    $$$$$:  115-block  4
    $$$$$:  115-block  5
    $$$$$:  115-block  6
    $$$$$:  115-block  7
    $$$$$:  115-block  8
    $$$$$:  115-block  9
call   21 never executed
        3:  116:    Course c3{"Music", "optional", "Lena Raine", 5, 2};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  116-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  116-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  116-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
call   20 returned 1
    $$$$$:  116-block  3
    $$$$$:  116-block  4
    $$$$$:  116-block  5
    $$$$$:  116-block  6
    $$$$$:  116-block  7
    $$$$$:  116-block  8
    $$$$$:  116-block  9
call   21 never executed
        1:  117:    auto& repo = ctrl.getAll();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  118:
       1*:  119:    assert(repo.get_size() == 1);
        1:  119-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  119-block  1
call    3 never executed
       1*:  120:    assert(repo.at(0).to_str() == c1.to_str());
        1:  120-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  120-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  120-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  120-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:  120-block  4
call   12 never executed
        1:  120-block  5
call   13 returned 1
call   14 returned 1
    $$$$$:  120-block  6
call   15 never executed
    $$$$$:  120-block  7
        -:  121:
        1:  122:    ctrl.add_course("Math", "Terry Tao", "optional", "8");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  122-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  122-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  122-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  122-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  122-block  4
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
    $$$$$:  122-block  5
call   27 never executed
    $$$$$:  122-block  6
    $$$$$:  122-block  7
call   28 never executed
    $$$$$:  122-block  8
    $$$$$:  122-block  9
call   29 never executed
    $$$$$:  122-block 10
    $$$$$:  122-block 11
call   30 never executed
    $$$$$:  122-block 12
    $$$$$:  122-block 13
call   31 never executed
    $$$$$:  122-block 14
    $$$$$:  122-block 15
call   32 never executed
    $$$$$:  122-block 16
    $$$$$:  122-block 17
call   33 never executed
    $$$$$:  122-block 18
    $$$$$:  122-block 19
call   34 never executed
    $$$$$:  122-block 20
        1:  123:    ctrl.add_course("Music", "Lena Raine", "optional", "5");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  123-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  123-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  123-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  123-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  123-block  4
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
    $$$$$:  123-block  5
call   27 never executed
    $$$$$:  123-block  6
    $$$$$:  123-block  7
call   28 never executed
    $$$$$:  123-block  8
    $$$$$:  123-block  9
call   29 never executed
    $$$$$:  123-block 10
    $$$$$:  123-block 11
call   30 never executed
    $$$$$:  123-block 12
    $$$$$:  123-block 13
call   31 never executed
    $$$$$:  123-block 14
    $$$$$:  123-block 15
call   32 never executed
    $$$$$:  123-block 16
    $$$$$:  123-block 17
call   33 never executed
    $$$$$:  123-block 18
    $$$$$:  123-block 19
call   34 never executed
    $$$$$:  123-block 20
        1:  124:    ctrl.add_course("Music part two", "Lena Raine", "optional", "5");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  124-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  124-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  124-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  124-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  124-block  4
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
    $$$$$:  124-block  5
call   27 never executed
    $$$$$:  124-block  6
    $$$$$:  124-block  7
call   28 never executed
    $$$$$:  124-block  8
    $$$$$:  124-block  9
call   29 never executed
    $$$$$:  124-block 10
    $$$$$:  124-block 11
call   30 never executed
    $$$$$:  124-block 12
    $$$$$:  124-block 13
call   31 never executed
    $$$$$:  124-block 14
    $$$$$:  124-block 15
call   32 never executed
    $$$$$:  124-block 16
    $$$$$:  124-block 17
call   33 never executed
    $$$$$:  124-block 18
    $$$$$:  124-block 19
call   34 never executed
    $$$$$:  124-block 20
        -:  125:
        -:  126:
        -:  127:    // bad add
        -:  128:    try
        -:  129:    {
       9*:  130:        ctrl.add_course("Music", "Lena Raine", "optional", "5");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  130-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  130-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  130-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  130-block  3
call   16 returned 1
branch 17 taken 0 (fallthrough)
branch 18 taken 1 (throw)
    %%%%%:  130-block  4
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
        1:  130-block  5
call   27 returned 1
        1:  130-block  6
        1:  130-block  7
call   28 returned 1
        1:  130-block  8
        1:  130-block  9
call   29 returned 1
        1:  130-block 10
        1:  130-block 11
call   30 returned 1
        1:  130-block 12
        1:  130-block 13
call   31 returned 1
        1:  130-block 14
        1:  130-block 15
call   32 returned 1
        1:  130-block 16
        1:  130-block 17
call   33 returned 1
        1:  130-block 18
        1:  130-block 19
call   34 returned 1
        1:  130-block 20
    #####:  131:        assert(false);
call    0 never executed
        -:  132:    }
        1:  133:    catch (std::invalid_argument&){}
        1:  133-block  0
call    0 returned 1
call    1 returned 1
        -:  134:    try
        -:  135:    {
        9:  136:        ctrl.add_course("", "Lena Raine", "optional", "5");
        1:  136-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  136-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  136-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  136-block  3
call   12 returned 1
branch 13 taken 0 (fallthrough)
branch 14 taken 1 (throw)
    $$$$$:  136-block  4
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 returned 1
call   24 returned 1
branch 25 taken 1 (fallthrough)
branch 26 taken 0 (throw)
        1:  136-block  5
call   27 returned 1
        1:  136-block  6
        1:  136-block  7
call   28 returned 1
        1:  136-block  8
        1:  136-block  9
call   29 returned 1
        1:  136-block 10
        1:  136-block 11
call   30 returned 1
        1:  136-block 12
        1:  136-block 13
call   31 returned 1
        1:  136-block 14
        1:  136-block 15
call   32 returned 1
        1:  136-block 16
        1:  136-block 17
call   33 returned 1
        1:  136-block 18
        1:  136-block 19
call   34 returned 1
        1:  136-block 20
    =====:  137:        assert(false);
call    0 never executed
        -:  138:    }
        1:  139:    catch (std::invalid_argument&){}
        1:  139-block  0
call    0 returned 1
call    1 returned 1
        -:  140:    try
        -:  141:    {
        9:  142:        ctrl.add_course("Music", "", "optional", "5");
        1:  142-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  142-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  142-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  142-block  3
call   12 returned 1
branch 13 taken 0 (fallthrough)
branch 14 taken 1 (throw)
    $$$$$:  142-block  4
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 returned 1
call   24 returned 1
branch 25 taken 1 (fallthrough)
branch 26 taken 0 (throw)
        1:  142-block  5
call   27 returned 1
        1:  142-block  6
        1:  142-block  7
call   28 returned 1
        1:  142-block  8
        1:  142-block  9
call   29 returned 1
        1:  142-block 10
        1:  142-block 11
call   30 returned 1
        1:  142-block 12
        1:  142-block 13
call   31 returned 1
        1:  142-block 14
        1:  142-block 15
call   32 returned 1
        1:  142-block 16
        1:  142-block 17
call   33 returned 1
        1:  142-block 18
        1:  142-block 19
call   34 returned 1
        1:  142-block 20
    =====:  143:        assert(false);
call    0 never executed
        1:  144:    } catch (std::invalid_argument&){}
        1:  144-block  0
call    0 returned 1
call    1 returned 1
        -:  145:    try
        -:  146:    {
        9:  147:        ctrl.add_course("Music", "Lena Raine", "", "bad");
        1:  147-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  147-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  147-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  147-block  3
call   12 returned 1
branch 13 taken 0 (fallthrough)
branch 14 taken 1 (throw)
    $$$$$:  147-block  4
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 returned 1
call   24 returned 1
branch 25 taken 1 (fallthrough)
branch 26 taken 0 (throw)
        1:  147-block  5
call   27 returned 1
        1:  147-block  6
        1:  147-block  7
call   28 returned 1
        1:  147-block  8
        1:  147-block  9
call   29 returned 1
        1:  147-block 10
        1:  147-block 11
call   30 returned 1
        1:  147-block 12
        1:  147-block 13
call   31 returned 1
        1:  147-block 14
        1:  147-block 15
call   32 returned 1
        1:  147-block 16
        1:  147-block 17
call   33 returned 1
        1:  147-block 18
        1:  147-block 19
call   34 returned 1
        1:  147-block 20
    =====:  148:        assert(false);
call    0 never executed
        1:  149:    } catch (std::invalid_argument&){}
        1:  149-block  0
call    0 returned 1
call    1 returned 1
        -:  150:    try
        -:  151:    {
        9:  152:        ctrl.add_course("Music", "Lena Raine", "optional", "bad");
        1:  152-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  152-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  152-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  152-block  3
call   12 returned 1
branch 13 taken 0 (fallthrough)
branch 14 taken 1 (throw)
    $$$$$:  152-block  4
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 returned 1
call   24 returned 1
branch 25 taken 1 (fallthrough)
branch 26 taken 0 (throw)
        1:  152-block  5
call   27 returned 1
        1:  152-block  6
        1:  152-block  7
call   28 returned 1
        1:  152-block  8
        1:  152-block  9
call   29 returned 1
        1:  152-block 10
        1:  152-block 11
call   30 returned 1
        1:  152-block 12
        1:  152-block 13
call   31 returned 1
        1:  152-block 14
        1:  152-block 15
call   32 returned 1
        1:  152-block 16
        1:  152-block 17
call   33 returned 1
        1:  152-block 18
        1:  152-block 19
call   34 returned 1
        1:  152-block 20
    =====:  153:        assert(false);
call    0 never executed
        1:  154:    } catch (std::invalid_argument&){}
        1:  154-block  0
call    0 returned 1
call    1 returned 1
        -:  155:    try
        -:  156:    {
        9:  157:        ctrl.add_course("Music", "Lena Raine", "optional", "-1");
        1:  157-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  157-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  157-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  157-block  3
call   12 returned 1
branch 13 taken 0 (fallthrough)
branch 14 taken 1 (throw)
    $$$$$:  157-block  4
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 returned 1
call   24 returned 1
branch 25 taken 1 (fallthrough)
branch 26 taken 0 (throw)
        1:  157-block  5
call   27 returned 1
        1:  157-block  6
        1:  157-block  7
call   28 returned 1
        1:  157-block  8
        1:  157-block  9
call   29 returned 1
        1:  157-block 10
        1:  157-block 11
call   30 returned 1
        1:  157-block 12
        1:  157-block 13
call   31 returned 1
        1:  157-block 14
        1:  157-block 15
call   32 returned 1
        1:  157-block 16
        1:  157-block 17
call   33 returned 1
        1:  157-block 18
        1:  157-block 19
call   34 returned 1
        1:  157-block 20
    =====:  158:        assert(false);
call    0 never executed
        1:  159:    } catch (std::invalid_argument&){}
        1:  159-block  0
call    0 returned 1
call    1 returned 1
        -:  160:
        1:  161:    auto& cc = ctrl.getCourse("Math");
        1:  161-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  161-block  1
call    3 returned 1
call    4 returned 1
call    5 returned 1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:  161-block  2
call    9 never executed
    $$$$$:  161-block  3
    $$$$$:  161-block  4
call   10 never executed
    $$$$$:  161-block  5
        1:  162:    assert(cc.to_str() == c2.to_str());
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  162-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  162-block  1
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    $$$$$:  162-block  2
call    9 never executed
        1:  162-block  3
call   10 returned 1
call   11 returned 1
    $$$$$:  162-block  4
call   12 never executed
    $$$$$:  162-block  5
        -:  163:
        3:  164:    auto vec = ctrl.getCoursesMatchingHPW("5", "8");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  164-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  164-block  1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
call   11 returned 1
call   12 returned 1
call   13 returned 1
call   14 returned 1
    $$$$$:  164-block  2
    $$$$$:  164-block  3
    $$$$$:  164-block  4
    $$$$$:  164-block  5
    $$$$$:  164-block  6
call   15 never executed
        1:  165:    assert(vec->size() == 3);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    $$$$$:  165-block  0
call    4 never executed
        -:  166:
        -:  167:    try {
        5:  168:        ctrl.getCoursesMatchingHPW("8", "5");
        1:  168-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  168-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  168-block  2
call    8 returned 1
branch  9 taken 0 (fallthrough)
branch 10 taken 1 (throw)
    $$$$$:  168-block  3
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
        1:  168-block  4
call   16 returned 1
        1:  168-block  5
        1:  168-block  6
call   17 returned 1
        1:  168-block  7
        1:  168-block  8
call   18 returned 1
        1:  168-block  9
        1:  168-block 10
call   19 returned 1
        1:  168-block 11
    =====:  169:        assert(false);
call    0 never executed
        1:  170:    } catch(std::invalid_argument& e){}
        1:  170-block  0
call    0 returned 1
call    1 returned 1
        -:  171:
        -:  172:    try {
        5:  173:        ctrl.getCoursesMatchingHPW("asdsad", "bad");
        1:  173-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  173-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1 (throw)
    $$$$$:  173-block  2
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  173-block  3
call   16 returned 1
        1:  173-block  4
        1:  173-block  5
call   17 returned 1
        1:  173-block  6
        1:  173-block  7
call   18 returned 1
        1:  173-block  8
        1:  173-block  9
call   19 returned 1
        1:  173-block 10
    =====:  174:        assert(false);
call    0 never executed
        1:  175:    } catch(std::invalid_argument& e){}
        1:  175-block  0
call    0 returned 1
call    1 returned 1
        -:  176:
        3:  177:    auto vec2 = ctrl.getCoursesMatchingTeacher("Lena Raine");
        1:  177-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
        1:  177-block  1
call    4 returned 1
call    5 returned 1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:  177-block  2
    $$$$$:  177-block  3
    $$$$$:  177-block  4
call    9 never executed
        1:  178:    assert(vec2->size() == 2);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    $$$$$:  178-block  0
call    4 never executed
        -:  179:
        5:  180:    std::string criteria[3] = {"hours", "name", "teacher"};
        1:  180-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  180-block  1
call    4 returned 1
call    5 returned 1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  180-block  2
call    9 returned 1
call   10 returned 1
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:  180-block  3
call   14 returned 1
        4:  180-block  4
branch 15 taken 3 (fallthrough)
branch 16 taken 1
        3:  180-block  5
call   17 returned 3
    $$$$$:  180-block  6
call   18 never executed
    $$$$$:  180-block  7
    $$$$$:  180-block  8
call   19 never executed
    $$$$$:  180-block  9
    $$$$$:  180-block 10
call   20 never executed
    $$$$$:  180-block 11
    $$$$$:  180-block 12
    $$$$$:  180-block 13
call   21 never executed
    $$$$$:  180-block 14
    $$$$$:  180-block 15
branch 22 never executed
branch 23 never executed
    $$$$$:  180-block 16
call   24 never executed
        2:  181:    auto vec3 = ctrl.getSortedBy(criteria[0]);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
    $$$$$:  181-block  0
call    4 never executed
        1:  182:    assert(vec3->size() == 4);
        1:  182-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    $$$$$:  182-block  1
call    4 never executed
        1:  183:    assert(vec3->at(0).to_str() == c1.to_str());
        1:  183-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  183-block  1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  183-block  2
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  183-block  3
call   10 returned 1
branch 11 taken 0 (fallthrough)
branch 12 taken 1
    $$$$$:  183-block  4
call   13 never executed
        1:  183-block  5
call   14 returned 1
call   15 returned 1
    $$$$$:  183-block  6
call   16 never executed
    $$$$$:  183-block  7
        -:  184:
        2:  185:    auto vec4 = ctrl.getSortedBy(criteria[1]);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
    $$$$$:  185-block  0
call    4 never executed
        1:  186:    assert(vec4->size() == 4);
        1:  186-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    $$$$$:  186-block  1
call    4 never executed
        1:  187:    assert(vec4->at(0).to_str() == c2.to_str());
        1:  187-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  187-block  1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  187-block  2
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  187-block  3
call   10 returned 1
branch 11 taken 0 (fallthrough)
branch 12 taken 1
    $$$$$:  187-block  4
call   13 never executed
        1:  187-block  5
call   14 returned 1
call   15 returned 1
    $$$$$:  187-block  6
call   16 never executed
    $$$$$:  187-block  7
        -:  188:
        2:  189:    auto vec5 = ctrl.getSortedBy(criteria[2]);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
    $$$$$:  189-block  0
call    4 never executed
        1:  190:    assert(vec5->size() == 4);
        1:  190-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    $$$$$:  190-block  1
call    4 never executed
        1:  191:    assert(vec5->at(0).to_str() == c1.to_str());
        1:  191-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  191-block  1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  191-block  2
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  191-block  3
call   10 returned 1
branch 11 taken 0 (fallthrough)
branch 12 taken 1
    $$$$$:  191-block  4
call   13 never executed
        1:  191-block  5
call   14 returned 1
call   15 returned 1
    $$$$$:  191-block  6
call   16 never executed
    $$$$$:  191-block  7
        -:  192:
        -:  193:    try{
        3:  194:        ctrl.getSortedBy("bad_criterion");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  194-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1 (throw)
    $$$$$:  194-block  1
call    7 never executed
call    8 never executed
call    9 never executed
        1:  194-block  2
call   10 returned 1
        1:  194-block  3
        1:  194-block  4
call   11 returned 1
        1:  194-block  5
    =====:  195:        assert(false);
call    0 never executed
        -:  196:    }
        1:  197:    catch(std::invalid_argument&){}
        1:  197-block  0
call    0 returned 1
call    1 returned 1
        -:  198:
        1:  199:    ctrl.modify_course("2", "Math", "Terry Tao", "optional", "10");
        1:  199-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  199-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  199-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  199-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  199-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  199-block  5
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
call   27 returned 1
call   28 returned 1
call   29 returned 1
call   30 returned 1
branch 31 taken 1 (fallthrough)
branch 32 taken 0 (throw)
    $$$$$:  199-block  6
call   33 never executed
    $$$$$:  199-block  7
    $$$$$:  199-block  8
call   34 never executed
    $$$$$:  199-block  9
    $$$$$:  199-block 10
call   35 never executed
    $$$$$:  199-block 11
    $$$$$:  199-block 12
call   36 never executed
    $$$$$:  199-block 13
    $$$$$:  199-block 14
call   37 never executed
    $$$$$:  199-block 15
    $$$$$:  199-block 16
call   38 never executed
    $$$$$:  199-block 17
    $$$$$:  199-block 18
call   39 never executed
    $$$$$:  199-block 19
    $$$$$:  199-block 20
call   40 never executed
    $$$$$:  199-block 21
    $$$$$:  199-block 22
call   41 never executed
    $$$$$:  199-block 23
    $$$$$:  199-block 24
call   42 never executed
    $$$$$:  199-block 25
        -:  200:
        1:  201:    ctrl.remove_course("0");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  201-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  201-block  1
call    7 returned 1
call    8 returned 1
    $$$$$:  201-block  2
call    9 never executed
    $$$$$:  201-block  3
    $$$$$:  201-block  4
call   10 never executed
    $$$$$:  201-block  5
        1:  202:    assert(ctrl.getAll().get_size() == 3);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  202-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:  202-block  1
call    6 never executed
        -:  203:
        1:  204:    ctrl.generate_contract("1");
        1:  204-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  204-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  204-block  2
call    7 returned 1
call    8 returned 1
    $$$$$:  204-block  3
call    9 never executed
    $$$$$:  204-block  4
    $$$$$:  204-block  5
call   10 never executed
    $$$$$:  204-block  6
        2:  205:    auto last = ctrl.getAll().at(3);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  205-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  205-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 1
    $$$$$:  205-block  2
call   10 never executed
        1:  206:    assert(is_valid_string(last.get_name()));
        1:  206-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  206-block  1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:  206-block  2
call    6 never executed
        1:  207:    assert(is_valid_string(last.get_teacher()));
        1:  207-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  207-block  1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:  207-block  2
call    6 never executed
        1:  208:    assert(is_valid_string(last.get_type()));
        1:  208-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  208-block  1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:  208-block  2
call    6 never executed
        1:  209:    assert(is_valid_hours_per_week(last.getHPW()));
        1:  209-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  209-block  1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:  209-block  2
call    6 never executed
        1:  210:    assert(last.get_id() == 4);
        1:  210-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  210-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    $$$$$:  210-block  2
call    5 never executed
        1:  211:    assert(ctrl.get_number_of_courses_in_contract() == 1);
        1:  211-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  211-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    $$$$$:  211-block  2
call    5 never executed
        1:  212:    ctrl.add_course_to_contract("Math");
        1:  212-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  212-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  212-block  2
call    7 returned 1
call    8 returned 1
    $$$$$:  212-block  3
call    9 never executed
    $$$$$:  212-block  4
    $$$$$:  212-block  5
call   10 never executed
    $$$$$:  212-block  6
        -:  213:    try {
        3:  214:        ctrl.add_course_to_contract("BAD");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  214-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1 (throw)
    $$$$$:  214-block  1
call    7 never executed
call    8 never executed
        1:  214-block  2
call    9 returned 1
        1:  214-block  3
        1:  214-block  4
call   10 returned 1
        1:  214-block  5
        1:  215:    } catch (std::out_of_range&) {}
        1:  215-block  0
call    0 returned 1
call    1 returned 1
        1:  216:    assert(ctrl.get_number_of_courses_in_contract() == 2);
        1:  216-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  216-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    $$$$$:  216-block  2
call    5 never executed
        1:  217:    ctrl.clear_contract();
        1:  217-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  218:    assert(ctrl.get_number_of_courses_in_contract() == 0);
        1:  218-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  218-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    $$$$$:  218-block  2
call    5 never executed
        -:  219:
        -:  220:
        -:  221:    // bad generate
        -:  222:    try{
        3:  223:        ctrl.generate_contract("bad");
        1:  223-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  223-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1 (throw)
    $$$$$:  223-block  2
call    7 never executed
call    8 never executed
        1:  223-block  3
call    9 returned 1
        1:  223-block  4
        1:  223-block  5
call   10 returned 1
        1:  223-block  6
    =====:  224:        assert(false);
call    0 never executed
        1:  225:    } catch (std::invalid_argument&) {}
        1:  225-block  0
call    0 returned 1
call    1 returned 1
        -:  226:
        2:  227:    ContractController ctrl2;
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  227-block  0
call    4 never executed
        1:  228:    ctrl2.generate_contract("1");
        1:  228-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  228-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  228-block  2
call    7 returned 1
call    8 returned 1
    $$$$$:  228-block  3
call    9 never executed
    $$$$$:  228-block  4
    $$$$$:  228-block  5
call   10 never executed
    $$$$$:  228-block  6
        1:  229:    ctrl2.export_contract_to_file("test");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  229-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  229-block  1
call    7 returned 1
call    8 returned 1
    $$$$$:  229-block  2
call    9 never executed
    $$$$$:  229-block  3
    $$$$$:  229-block  4
call   10 never executed
    $$$$$:  229-block  5
        2:  230:    std::fstream in("test.csv", std::ios::in);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
    $$$$$:  230-block  0
call    4 never executed
        1:  231:    assert(in.is_open());
        1:  231-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  231-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    $$$$$:  231-block  2
call    5 never executed
        2:  232:    std::string line;
        1:  232-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:  232-block  1
call    2 never executed
        1:  233:    std::getline(in, line);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  234:    assert(ctrl2.getAll().at(0).to_csv() == line);
        1:  234-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  234-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  234-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  234-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    $$$$$:  234-block  4
call   12 never executed
        1:  234-block  5
call   13 returned 1
        -:  235:
        -:  236:    //Type Data
        -:  237:
        2:  238:    ContractController ctrl3;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
    $$$$$:  238-block  0
call    4 never executed
        1:  239:    ctrl3.add_course("Math", "Terry Tao", "mandatory", "8");
        1:  239-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  239-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  239-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  239-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  239-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  239-block  5
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
    $$$$$:  239-block  6
call   27 never executed
    $$$$$:  239-block  7
    $$$$$:  239-block  8
call   28 never executed
    $$$$$:  239-block  9
    $$$$$:  239-block 10
call   29 never executed
    $$$$$:  239-block 11
    $$$$$:  239-block 12
call   30 never executed
    $$$$$:  239-block 13
    $$$$$:  239-block 14
call   31 never executed
    $$$$$:  239-block 15
    $$$$$:  239-block 16
call   32 never executed
    $$$$$:  239-block 17
    $$$$$:  239-block 18
call   33 never executed
    $$$$$:  239-block 19
    $$$$$:  239-block 20
call   34 never executed
    $$$$$:  239-block 21
        1:  240:    ctrl3.add_course("Music", "Lena Raine", "optional", "5");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  240-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  240-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  240-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  240-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  240-block  4
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
    $$$$$:  240-block  5
call   27 never executed
    $$$$$:  240-block  6
    $$$$$:  240-block  7
call   28 never executed
    $$$$$:  240-block  8
    $$$$$:  240-block  9
call   29 never executed
    $$$$$:  240-block 10
    $$$$$:  240-block 11
call   30 never executed
    $$$$$:  240-block 12
    $$$$$:  240-block 13
call   31 never executed
    $$$$$:  240-block 14
    $$$$$:  240-block 15
call   32 never executed
    $$$$$:  240-block 16
    $$$$$:  240-block 17
call   33 never executed
    $$$$$:  240-block 18
    $$$$$:  240-block 19
call   34 never executed
    $$$$$:  240-block 20
        1:  241:    ctrl3.add_course("Music part two", "Lena Raine", "optional", "5");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  241-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  241-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  241-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  241-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  241-block  4
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
    $$$$$:  241-block  5
call   27 never executed
    $$$$$:  241-block  6
    $$$$$:  241-block  7
call   28 never executed
    $$$$$:  241-block  8
    $$$$$:  241-block  9
call   29 never executed
    $$$$$:  241-block 10
    $$$$$:  241-block 11
call   30 never executed
    $$$$$:  241-block 12
    $$$$$:  241-block 13
call   31 never executed
    $$$$$:  241-block 14
    $$$$$:  241-block 15
call   32 never executed
    $$$$$:  241-block 16
    $$$$$:  241-block 17
call   33 never executed
    $$$$$:  241-block 18
    $$$$$:  241-block 19
call   34 never executed
    $$$$$:  241-block 20
        -:  242:
        1:  243:    auto data = ctrl3.getCourseTypeData();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:  243-block  0
call    3 never executed
        -:  244:
        1:  245:    assert((*data)["mandatory"] == 1);
        1:  245-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:  245-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  245-block  2
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    $$$$$:  245-block  3
call   10 never executed
        1:  245-block  4
call   11 returned 1
call   12 returned 1
    $$$$$:  245-block  5
call   13 never executed
    $$$$$:  245-block  6
    $$$$$:  245-block  7
call   14 never executed
    $$$$$:  245-block  8
        1:  246:    assert((*data)["optional"] == 2);
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:  246-block  0
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  246-block  1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    $$$$$:  246-block  2
call   10 never executed
        1:  246-block  3
call   11 returned 1
call   12 returned 1
call   13 returned 1
    $$$$$:  246-block  4
call   14 never executed
    $$$$$:  246-block  5
    $$$$$:  246-block  6
call   15 never executed
    $$$$$:  246-block  7
        1:  247:}
        -:  248:
        -:  249://void testVector(){
        -:  250://    Course c1{"Painting", "optional", "Bob Ross", 4, 0};
        -:  251://    Vector<Course> vector;
        -:  252://
        -:  253://    for(int i = 0; i < 100; ++i){
        -:  254://        vector.push_back(c1);
        -:  255://    }
        -:  256://
        -:  257://    for(int i = 0; i < 100; ++i){
        -:  258://        assert(vector.at(i).to_str() == c1.to_str());
        -:  259://        assert(vector[i].to_str() == c1.to_str());
        -:  260://    }
        -:  261://
        -:  262://    auto v2 = vector;
        -:  263://
        -:  264://    for(int i = 0; i < 100; ++i){
        -:  265://        assert(v2.at(i).to_str() == c1.to_str());
        -:  266://    }
        -:  267://
        -:  268://    for(auto it = v2.cbegin(); it != v2.cend(); ++it) {
        -:  269://        assert(it->to_str() == c1.to_str());
        -:  270://        assert((*it).to_str() == c1.to_str());
        -:  271://    }
        -:  272://
        -:  273://    for(auto it = v2.begin(); it != v2.end(); ++it) {
        -:  274://        assert(it->to_str() == c1.to_str());
        -:  275://        assert((*it).to_str() == c1.to_str());
        -:  276://    }
        -:  277://
        -:  278://    try{
        -:  279://        vector.at(1234);
        -:  280://        assert(false);
        -:  281://    } catch (std::out_of_range&) {}
        -:  282://
        -:  283://    try{
        -:  284://        const auto a = vector[1234];
        -:  285://        assert(false);
        -:  286://    } catch (std::out_of_range&) {}
        -:  287://
        -:  288://    try{
        -:  289://        auto a = vector[1234];
        -:  290://        assert(false);
        -:  291://    } catch (std::out_of_range&) {}
        -:  292://
        -:  293://
        -:  294://    assert(vector.begin()->to_str() == c1.to_str());
        -:  295://    assert(vector.cbegin()->to_str() == c1.to_str());
        -:  296://
        -:  297://}
        -:  298:
        -:  299://void testBadSort() {
        -:  300://  Course c1{"Music", "optional", "Lena Raine", 5, 0};
        -:  301://  Course c2{"Music two", "optional", "Lena Raine", 1, 1};
        -:  302://  ContractController ctrl;
        -:  303://  ctrl.add_course("Music", "Lena Raine", "optional", "5");
        -:  304://  ctrl.add_course("Music two", "Lena Raine", "optional", "1");
        -:  305://
        -:  306://
        -:  307://
        -:  308://  Vector<int> v1;
        -:  309://
        -:  310://  v1.push_back(3);
        -:  311://  v1.push_back(2);
        -:  312://  v1.push_back(1);
        -:  313://
        -:  314://  std::vector<int> v2{1, 3, 2, 1};
        -:  315://
        -:  316://  auto begin = v1.begin();
        -:  317://  auto end = v1.end();
        -:  318://
        -:  319://  std::sort(begin, end);
        -:  320://  std::sort(std::begin(v2), std::end(v2));
        -:  321://
        -:  322://
        -:  323://    std::string h = "hours";
        -:  324://  auto result = ctrl.getSortedBy(h);
        -:  325://  assert(result->at(0).to_str() == c2.to_str());
        -:  326://  assert(result->at(1).to_str() == c1.to_str());
        -:  327://}
        -:  328:
function _Z13run_all_testsv called 1 returned 100% blocks executed 100%
        1:  329:void run_all_tests() {
        1:  330:  testDomain();
        1:  330-block  0
call    0 returned 1
        1:  331:  testValidate();
call    0 returned 1
        1:  332:  testRepo();
call    0 returned 1
        1:  333:  testControl();
call    0 returned 1
        -:  334://  testVector();
        -:  335:
        -:  336://  testBadSort();
        -:  337:
        1:  338:  std::cout << "All tests ran successfully!" << std::endl;
call    0 returned 1
call    1 returned 1
        1:  339:}
